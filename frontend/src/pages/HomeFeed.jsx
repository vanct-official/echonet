import { useEffect, useState } from "react";
import axios from "axios";
import { Box, Flex, Spinner, Text } from "@chakra-ui/react"; // üí° Th√™m Spinner v√† Text
import Post from "../components/posts/Post.jsx";
import Sidebar from "../components/Sidebar.jsx";
import CreatePost from "../components/posts/CreatePost.jsx";

// üí° ƒê·ªïi t√™n prop nh·∫≠n v√†o th√†nh { currentUser } ƒë·ªÉ ƒë·ªìng b·ªô v·ªõi t√™n b·∫°n s·ª≠ d·ª•ng
export default function HomeFeed({ currentUser }) {
  const [posts, setPosts] = useState([]);
  const [loading, setLoading] = useState(true); // Th√™m state loading

  useEffect(() => {
    // T·ªëi ∆∞u h√≥a: L·∫•y token ƒë·ªÉ g·ª≠i k√®m, ƒë·ªÅ ph√≤ng API c·∫ßn x√°c th·ª±c
    const token = localStorage.getItem("token");

    axios
      .get("http://localhost:5000/api/posts", {
        // G·ª≠i token n·∫øu c√≥
        headers: token ? { Authorization: `Bearer ${token}` } : {},
      })
      .then((res) => setPosts(res.data))
      .catch((err) => console.error("L·ªói khi l·∫•y b√†i vi·∫øt:", err))
      .finally(() => setLoading(false));
  }, []);

  return (
    <Flex maxW="1000px" mx="auto" mt={5}>
      {/* Sidebar */}
      {/* Truy·ªÅn prop currentUser xu·ªëng Sidebar */}
      <Sidebar user={currentUser} />

      {/* Feed */}
      <Box flex={1} p={5}>
        <CreatePost
          // Ch·∫Øc ch·∫Øn ch·ªâ cho ph√©p ƒëƒÉng b√†i n·∫øu ƒë√£ ƒëƒÉng nh·∫≠p
          isDisabled={!currentUser}
          onPostCreated={(newPost) => setPosts([newPost, ...posts])}
        />

        {loading ? (
          // Hi·ªÉn th·ªã loading spinner
          <Spinner size="lg" display="block" mx="auto" mt={10} />
        ) : posts.length === 0 ? (
          // Hi·ªÉn th·ªã th√¥ng b√°o khi kh√¥ng c√≥ b√†i ƒëƒÉng
          <Text textAlign="center" color="gray.500" mt={10}>
            Kh√¥ng c√≥ b√†i vi·∫øt n√†o ƒë·ªÉ hi·ªÉn th·ªã.
          </Text>
        ) : (
          // üí° S·ª¨A L·ªñI: ƒê√£ truy·ªÅn currentUser xu·ªëng component Post
          posts.map((post) => (
            <Post key={post._id} post={post} currentUser={currentUser} />
          ))
        )}
      </Box>
    </Flex>
  );
}
